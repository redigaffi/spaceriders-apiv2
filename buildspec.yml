version: 0.2


phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version 
      - docker login -u AWS -p $(aws ecr get-login-password --region eu-west-1) $REGISTRY
      - REPOSITORY_URI=$REGISTRY
      - echo $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"api","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions1.json
      - printf '[{"name":"cronjobs","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions2.json
      - printf '[{"name":"websockets","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions3.json
artifacts:
  secondary-artifacts:
    api:
      files: imagedefinitions1.json
      name: api
    cronjobs:
      files: imagedefinitions2.json
      name: cronjobs
    websockets:
      files: imagedefinitions3.json
      name: websockets


